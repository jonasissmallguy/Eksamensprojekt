@using Core

@inject IAuth AuthService;
@inject IBruger IBrugerService;
@inject NavigationManager navMan;
@inject IGoal IGoalService;

@page "/"

<h3 class="page-title">Oversigt</h3>

<div class="dashboard-grid">
    @if (_currentUser?.Rolle == "Elev")
    {
        <div class="dashboard-card">
            <h5 class="card-title">Velkomst Boks</h5>
            <p>Velkommen til din side @_currentUser?.FirstName</p>
        </div>
        <div class="dashboard-card">
            <h5 class="card-title">Kommende Skoleophold</h5>
            <p>Du har følgende skoleophold</p>
        </div>
        <div class="dashboard-card">
            <h5 class="card-title">Aktive Delmål</h5>
            <p>Igangværende delmål</p>
        </div>
        <div class="dashboard-card">
            <h5 class="card-title">Kommende Kurser</h5>
            <p>Følgende kurser kommer i den næste periode</p>
        </div>
    }
    else if (_currentUser?.Rolle == "Køkkenchef")
    {
        <div class="dashboard-card">
            <h5 class="card-title">Kommende Kurser</h5>
            <p>Oversigt over kommende kurser</p>
        </div>
        <div class="dashboard-card">
            <h5 class="card-title">Kommende Skoleophold</h5>
            <p>Kommende skoleophold for dine elever</p>
        </div>
        <div class="dashboard-card">
            <h5 class="card-title">Manglende kurser</h5>
            <p>Dine elevers manglende kurser</p>
            @if (_missingCourses != null)
            {
                <ul class="list-reset">
                    @foreach (var g in _missingCourses)
                    {
                        <li>Kursus: @g.Title Elev: ...</li>
                    }
                </ul>
            }
        </div>
        <div class="dashboard-card">
            <h5 class="card-title">Elevers mål der afventer dine godkendelser</h5>
            <p>Du har følgende notifikationer</p>
            @if (_awaitingApproval != null)
            {
                <ul class="list-reset">
                    @foreach (var g in _awaitingApproval)
                    {
                        <li>
                            Delmål: @g.Title
                            <button class="btn-approve" @onclick="() => ApproveGoal(g)">Godkend mål</button>
                        </li>
                    }
                </ul>
            }
        </div>
    }
</div>



@code {
    private BrugerLoginDTO _currentUser;
    private User _bruger;
    private List<Goal> _awaitingApproval;
    private List<Goal> _missingCourses;

    protected override async Task OnInitializedAsync()
    {
            _currentUser = await AuthService.GetBruger();
            if (_currentUser == null)
            {
                navMan.NavigateTo("login/");
                return;
            }

            _bruger = await IBrugerService.GetUserById(_currentUser.Id);

            // Redirect HR og kok til Dashboard
            if (_currentUser.Rolle == "HR" || _currentUser.Rolle == "Kok")
            {
                navMan.NavigateTo("/Dashboard");
                return;
            }

            // Hvis det er køkkenchef, indlæser vi de relevante data
            if (_currentUser.Rolle == "Køkkenchef")
            {
                _awaitingApproval = await IGoalService.GetAwaitingApproval();
                _missingCourses = await IGoalService.GetMissingCourses(_bruger);
                
                
                
            }
        }
       
        private async Task ApproveGoal(Goal goal)
        {
            await IGoalService.ConfirmGoalFromHomePage(goal);

            if (goal.Id != null)
            {
                _awaitingApproval = _awaitingApproval.Where(g => g.Id != goal.Id).ToList();
            }
        }
    }