@page "/minprofil/{id:int}"
@inherits LayoutComponentBase

@inject NavigationManager navMan;
@inject IBruger IBrugerService;

@using Core;


@if (_minBruger != null)
{
    <div class="min-profil">
    <div class="profile-sidebar">
            <div class="profile-image-container">
                <img src="https://cdn.pixabay.com/photo/2015/10/05/22/37/blank-profile-picture-973460_960_720.png" alt="Profil billede" class="profile-image"/> 
            </div>
        <button class="change-password-btn" @onclick="() => NavigateToResetPassword()">Rediger adgangskode</button>     
    </div>
    
    <div class="card">
        <h2 class="title">Velkommen til din profil, @_minBruger.FirstName</h2>
        <EditForm Model="_minBruger" OnValidSubmit="@UpdateDetails">
            <DataAnnotationsValidator/>
            <ValidationSummary class="validation-summary"/>
            <div class="form-control">
                <div class="input-group">
                    <label for="navn">Fulde navn</label>
                    <InputText id="navn" @bind-Value="_minBruger.FirstName"/>
                </div>

                <div class="input-group">
                    <label for="telefon">Telefonnummer</label>
                    <InputNumber id="telefon" @bind-Value="_minBruger.Mobile"/>
                </div>

                <div class="input-group">
                    <label for="email">Email</label>
                    <InputText id="email" @bind-Value="@_minBruger.Email" disabled />
                </div>

                <div class="input-group">
                    <label for="rolle">Rolle</label>
                    <InputText id="rolle" @bind-Value="@_minBruger.Rolle" disabled />
                </div>
            </div>

            <div class="mt-6 flex gap-3">
                <button class="btn btn-primary" type="submit">Gem ændringer</button>
            </div>
        </EditForm>
    </div>
</div>
}


@code {
    
    [Parameter]
    public int id { get; set; }

    [CascadingParameter] 
    private BrugerLoginDTO _currentUser { get; set; }

    private User _minBruger { get; set; }
    
    private byte[] _pictureByes;

    
    protected override async Task OnInitializedAsync()
    {
        if (_currentUser == null)
        {
            navMan.NavigateTo($"login/minside{id}");
            return;
        }
        _minBruger = await IBrugerService.GetBrugerById(id);
    }
    
    private void NavigateToResetPassword()
    {
        navMan.NavigateTo("opdaterpassword");
    }
    
    private async Task UpdateDetails()
    {
        await IBrugerService.OpdaterBruger(id, _minBruger);
    }
    

}