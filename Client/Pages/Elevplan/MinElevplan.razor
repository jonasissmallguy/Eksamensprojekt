@using Core
@using Client.Components.Elevoversigt


@inject IBruger IBrugerService;
@inject IElevPlan IElevPlanService;
@inject IGoal IGoalService;

@page "/minelevplan/{studentId:int}"

<div class="page-wrapper">
    
    @if (elev != null)
    {
        <div class="bio">
            <div class="piccontainer">
                <img class="biopic" src="https://cdn.pixabay.com/photo/2015/10/05/22/37/blank-profile-picture-973460_960_720.png"/>
            </div>
            <div class="textcontainer">
                <h3 class="navn">@elev.FirstName </h3>
                <p class="telefon">Telefon: @elev.Mobile </p>
                <p class="mail">Mail: @elev.Email</p>
                <p class="restaurant">Restaurant: @elev.Hotel.HotelNavn</p>
            </div>
        </div>
    }

    <div class="content-scroll">
        @if (elev != null && _currentUser.Rolle == "HR")
        {
            <ElevplanComponent Plan="@elevPlan" ShowSubmitButton="false" ShowComments="true" OnAddCommentClick="AddComment" StartGoal="false" OnStartGoal="HandlingGoalStart" OnProcessGoal="ConfirmGoal"/>
        }
        else if (elev != null && _currentUser.Rolle == "Køkkenchef")
        {
            <ElevplanComponent Plan="@elevPlan"  ShowSubmitButton="false" ShowComments="true" OnAddCommentClick="AddComment" StartGoal="true" OnStartGoal="HandlingGoalStart" OnProcessGoal="ConfirmGoal"/>
        }
        else if (elev != null && _currentUser.Rolle == "Kok")
        {
            <ElevplanComponent Plan="@elevPlan"  ShowSubmitButton="false" ShowComments="true" OnAddCommentClick="AddComment" StartGoal="true" OnStartGoal="HandlingGoalStart" OnProcessGoal="ConfirmGoal"/>
        }
        else if (elev != null && _currentUser.Rolle == "Elev")
        {
            <ElevplanComponent Plan="@elevPlan"  ShowSubmitButton="false" ShowComments="true" OnAddCommentClick="AddComment" StartGoal="false" OnStartGoal="HandlingGoalStart" OnProcessGoal="ConfirmGoal"/>
        }
        else
        {
            <p>..Loading</p>
        }
    </div>
</div>
@code {

    [CascadingParameter] private BrugerLoginDTO _currentUser { get; set; }

    [Parameter] public int studentId { get; set; }
    private User elev;
    private Plan? elevPlan;
    

    protected override async Task OnInitializedAsync()
    {
        elev = await IBrugerService.GetBrugerById(studentId);
        elevPlan = await IElevPlanService.GetPlanByStudentId(studentId);
        
        //Dette er bare brugt til visning til COmwell - dette skal slettes!!!!!!
        if (elevPlan == null)
        {
            elevPlan = await IElevPlanService.CreateElevPlan(studentId);
        }
    }

    private async Task AddComment(NewComment comment)
    {
        await IGoalService.AddComment(comment, _currentUser);

    }

    private async Task HandlingGoalStart(ElevplanComponent.MentorAssignment newMentor)
    {
        await IGoalService.StartGoal(newMentor);
    }
    
    
    private async Task ConfirmGoal(ElevplanComponent.MentorAssignment bruger)
    {
        @if (_currentUser.Rolle == "Kok")
        {
            await IGoalService.ProcessGoal(bruger);
        }
        else if (_currentUser.Rolle == "Køkkenchef")
        {
            await IGoalService.ConfirmGoal(bruger);
        }
    }
}