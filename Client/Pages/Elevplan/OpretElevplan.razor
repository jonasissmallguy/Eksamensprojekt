@using Core
@using Client.Components.Elevoversigt
@using MongoDB.Bson


@inject NavigationManager navMan;
@inject IElevPlan IElevPlanService;
@inject IBruger IBrugerService;
@inject IGoal IGoalService;


@page "/opretelevplan/{studentId:int}"

@if (elev != null)
{
    <h2>Du er ved at oprette en elevplan for @elev.FirstName</h2>
    
    <ElevplanComponent Plan="@nyElevPlan"ShowSubmitButton="true"ShowComments="false" 
                       OnDelteClicked="HandleDeleteGoal" OnSubmitClicked="HandleElevplanSubmit" />

    <button class="btn btn-primary">Opret delmål</button>
}
else
{
    <p>Loading</p>
}

@code {
    [Parameter] public int studentId { get; set; }

    private Plan? nyElevPlan = new();
    private User elev = new();

    protected override async Task OnInitializedAsync()
    {
        elev = await IBrugerService.GetBrugerById(studentId);
        nyElevPlan = await IElevPlanService.CreateElevPlan(elev.Id);
        
    }
    
    private async Task HandleDeleteGoal(Goal goal)
    {
        await IGoalService.DeleteGoal(goal, studentId);
    }
    
    private async Task HandleElevplanSubmit()
    {
        //Gemmer planen
        await IElevPlanService.SavePlan(nyElevPlan);
        navMan.NavigateTo("/dashboard");
    }
    
    
    private void NavigateToCreateGoal()
    {
        navMan.NavigateTo("tilføj delmål");
    }


}