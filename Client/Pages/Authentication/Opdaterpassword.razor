@page "/opdaterpassword"

@inject IAuth AuthService;
@inject NavigationManager navMan;

@using Core;

<div class="form">
    <h3 class="title">Opdater din adgangskode</h3>
    <p class="info">Venligst opdater din adgangskode og bekræft den igen.
        Din nye adgangskode skal være 8 cifre</p>
    <div class="login-form">
        <EditForm Model="_passwordBruger" OnValidSubmit="@UpdatePassword">
            <DataAnnotationsValidator />
            <ValidationSummary />
            <div class="form-group">
                <InputText @bind-Value="_passwordBruger.Password" type="password" class="form-control" placeholder="Ny adgangskode"/>
            </div>
            <br/>
            <div class="form-group">
                <InputText @bind-Value="_passwordBruger.ConfirmPassword" type="password" class="form-control" placeholder="Bekræft ny adgangskode"/>
            </div>
            <br/>
            <button type="submit" class="button">Opdater adgangskode</button>
        </EditForm>
    </div>
</div>

@code {


    private BrugerLoginDTO _currentUser { get; set; }
    
    private BrugerPasswordDTO _passwordBruger = new();
    
    private async Task UpdatePassword()
    {
        var result = await AuthService.UpdatePassword(_passwordBruger.Password, _passwordBruger.ConfirmPassword);

        if (result)
        {
            if (_currentUser == null)
            {
                await AuthService.DeleteLocalStorageResetEmail();
                navMan.NavigateTo("login");
            }
            else
            {
                navMan.NavigateTo($"minside/{_currentUser.Id}");    
            }
            
        }
    }
}