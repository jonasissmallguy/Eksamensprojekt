@using Core;

@inject IKursus IKursusService;
@inject IGoal GoalService;
@inject IBruger BrugerService;
@inject NavigationManager navMan;


@page "/kursuspage/{kursusId:int}"
<h3>Kursus information</h3>

<div class="full-course-information">
    <table class="table table-striped">
        <thead>
        <tr>
            <th>Navn</th>
            <th>Resteruant</th>
        </tr>
        </thead>
        <tbody>
        <tr>
            @foreach (var x in _kursus.Students)
            {
                <td>@x.FirstName</td>
                <td>@x.Hotel.HotelNavn</td>
                <td>
                    <button clsas="btn btn-primary" @onclick="() => RemoveStudent(x)"></button>
                </td>
            }
        </tr>
        </tbody>
    </table>
</div>

<button @onclick="() => FinishCourse() ">Afslut kursus</button>

@code {

    [Parameter] public int kursusId { get; set; }

    private Kursus _kursus;
    

    protected override async Task OnInitializedAsync()
    {
        _kursus = await IKursusService.GetCourseById(kursusId);

    }

    private async Task FinishCourse()
    {
        await IKursusService.CompleteCourse(_kursus);
        navMan.NavigateTo("kursusoversigt");
    }

    private async Task RemoveStudent(User user)
    {
        await IKursusService.RemoveStudentFromCourse(user.Id);

        if (user != null)
        {
            _kursus.Students.Where(x => x.Id != user.Id);
        }
    }

}