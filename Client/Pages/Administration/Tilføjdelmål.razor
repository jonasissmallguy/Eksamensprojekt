@using Core
@using Core.DTO.Goal

@inject NavigationManager navMan;
@inject IGoal IGoalService;

@page "/tilføjdelmål"

<div class="addGoal-topline">
    <h3>Tilføj delmål</h3>

    <Dropdown Color="DropdownColor.Secondary">
        <DropdownToggleButton>Måltype:</DropdownToggleButton>
        <DropdownMenu>
            @foreach (var y in alleTyper)
            {
                <DropdownItem @onclick="() => SelectType(y.GoalId)">@y.GoalName</DropdownItem>
            }
        </DropdownMenu>
    </Dropdown>
</div>

<EditForm Model="newGoal" class="row p-3">
    <DataAnnotationsValidator/>
    <ValidationSummary/>
    <div class="row justify-content-center">
        <div class="col-md-6 mb-3">
            <label for="Type">Type: @(GetGoalName(selectedGoalId))</label>
        </div>
    </div>
    <!-- Herunder har vi et if statement der forbinder den valgte måltype med en bestemt editfor. -->
    <!-- 1 er kursus, 2 er skole, 3 er delmål -->
    
    @if (selectedGoalId == 1)
    {
        <div class="row justify-content-center">
            <div class="col-md-6 mb-3">
                <label for="Titel">Titel:</label>
                <InputText id="Titel" @bind-Value="newGoal.Title"
                           placeholder="Titel på delmål..." class="form-control"/>
            </div>
        </div>
        <div class="row justify-content-center">
            <div class="col-md-6 mb-3">
                <label for="Beskrivelse">Beskrivelse:</label>
                <InputTextArea id="Beskrivelse" @bind-Value="newGoal.Description"
                               placeholder="Beskrivelse" class="form-control"/>
            </div>
        </div>
        <div class="row justify-content-center">
            <div class="col-md-6 mb-3">
                <label for="Status">Status:</label>
                <InputText id="Status" @bind-Value="newGoal.Status"
                           placeholder="Status" class="form-control"/>
            </div>
        </div>
        <div class="row justify-content-center">
            <div class="col-md-6 mb-3">
                <label for="Semester">Semester:</label>
                <InputNumber id="Semester" @bind-Value="newGoal.Semester"
                             placeholder="Semester" class="form-control"/>
            </div>
        </div>
        <div class="row justify-content-center">
            <div class="col-md-6 mb-3">
                <button class="btn btn-primary">Tilføj</button>
            </div>
        </div>
    }
    else if (selectedGoalId == 2) 
    {
        <div class="row justify-content-center">
            <div class="col-md-6 mb-3">
                <label for="Titel">Titel:</label>
                <InputText id="Titel" @bind-Value="newGoal.Title"
                           placeholder="Titel på delmål..." class="form-control"/>
            </div>
        </div>
        <div class="row justify-content-center">
            <div class="col-md-6 mb-3">
                <label for="Beskrivelse">Beskrivelse:</label>
                <InputTextArea id="Beskrivelse" @bind-Value="newGoal.Description"
                               placeholder="Beskrivelse" class="form-control"/>
            </div>
        </div>
        <div class="row justify-content-center">
            <div class="col-md-6 mb-3">
                <label for="Status">Status:</label>
                <InputText id="Status" @bind-Value="newGoal.Status"
                           placeholder="Status" class="form-control"/>
            </div>
        </div>
        <div class="row justify-content-center">
            <div class="col-md-6 mb-3">
                <label for="Semester">Semester:</label>
                <InputNumber id="Semester" @bind-Value="newGoal.Semester"
                             placeholder="Semester" class="form-control"/>
            </div>
        </div>
        <div class="row justify-content-center">
            <div class="col-md-6 mb-3">
                <button class="btn btn-primary">Tilføj</button>
            </div>
        </div>
    }
    else if (selectedGoalId == 3)
    {
        <div class="row justify-content-center">
            <div class="col-md-6 mb-3">
                <label for="Titel">Titel:</label>
                <InputText id="Titel" @bind-Value="newGoal.Title"
                           placeholder="Titel på delmål..." class="form-control"/>
            </div>
        </div>
        <div class="row justify-content-center">
            <div class="col-md-6 mb-3">
                <label for="Beskrivelse">Beskrivelse:</label>
                <InputTextArea id="Beskrivelse" @bind-Value="newGoal.Description"
                               placeholder="Beskrivelse" class="form-control"/>
            </div>
        </div>
        <div class="row justify-content-center">
            <div class="col-md-6 mb-3">
                <label for="Status">Status:</label>
                <InputText id="Status" @bind-Value="newGoal.Status"
                           placeholder="Status" class="form-control"/>
            </div>
        </div>
        <div class="row justify-content-center">
            <div class="col-md-6 mb-3">
                <label for="Semester">Semester:</label>
                <InputNumber id="Semester" @bind-Value="newGoal.Semester"
                             placeholder="Semester" class="form-control"/>
            </div>
        </div>
        <div class="row justify-content-center">
            <div class="col-md-6 mb-3">
                <button class="btn btn-primary">Tilføj</button>
            </div>
        </div>
    }
    else
    {
        <p>Vælg en måltype for at få den passende skabelon.</p>
    }

</EditForm>

@code {

    private GoalCreationDTO newGoal = new();
    
    private List<GoalNameDTO> alleTyper;
    
    private int? selectedGoalId = null;

    private string GetGoalName(int? goalId)
    {
        var goal = alleTyper.FirstOrDefault(t => t.GoalId == goalId);
        return goal?.GoalName ?? "Ukendt";
    }
    
    private void SelectType(int? goalId)
    {
        selectedGoalId = goalId;
    }

    protected override async Task OnInitializedAsync()
    {
        alleTyper = await IGoalService.GetAllGoalTypes();
        
    }
    
}