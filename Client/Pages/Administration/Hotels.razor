@page "/hotels"

@inject IHotel IHotelService;
@inject IAuth IAuthService;
@inject NavigationManager navMan;

@using Core;

<div class="form-page-container">
    <div class="form-wrapper">
        <div class="form-card">
            <div class="form-header">
                <h1 class="form-title">Opret nyt hotel</h1>
                <p class="form-description">Udfyld nedenstående felter for at oprette et nyt hotel i systemet.</p>
            </div>
            <EditForm Model="newHotel" OnSubmit="@HandleNewHotel">
                <DataAnnotationsValidator />
                <ValidationSummary />
                <scan style="color: red">@errorText</scan>
                <div class="form-group">
                    <label class="form-label required-field">Hotel navn</label>
                    <InputText class="form-control" @bind-Value="newHotel.HotelNavn" placeholder="Indtast hotelnavn" />
                </div>

                <div class="form-group">
                    <label class="form-label required-field">Addresse</label>
                    <InputText class="form-control" @bind-Value="newHotel.Address" placeholder="Indtast addresse" />
                </div>

                <div class="form-group">
                    <label class="form-label required-field">Post-nr</label>
                    <InputNumber class="form-control" @bind-Value="newHotel.Zip" placeholder="Indtast postkode" />
                </div>

                <div class="form-group">
                    <label class="form-label required-field">By</label>
                    <InputText class="form-control" @bind-Value="newHotel.City" placeholder="Indtast bynavn" />
                </div>

                <div class="form-group">
                    <label class="form-label required-field">Region</label>
                    <InputSelect class="form-select" @bind-Value="newHotel.Region">
                        @foreach (var region in regioner)
                        {
                            <option value="@region">@region</option>
                        }
                    </InputSelect>
                </div>
                <button type="submit" class="submit-btn">Opret hotel</button>
            </EditForm>
        </div>
    </div>

    <div class="image-wrapper">
        <img src="icons/comwell.jpg"  class="form-image" />
    </div>
</div>

@code {

    //Brugeren der er logget ind
    [CascadingParameter] private BrugerLoginDTO _currentUser { get; set; }

    //Nyt hotel
    private HotelCreationDTO newHotel = new();
    
    //Dropdown regioner
    private string[] regioner = { "Jylland", "Sjælland", "Fyn" };

    string errorText = "";
    
    protected override async Task OnInitializedAsync()
    {
        _currentUser = await IAuthService.GetBruger();
        
        if (_currentUser == null)
        {
            navMan.NavigateTo("login/hotels");
            return;
        }
        
        if (_currentUser.Rolle != "HR")
        {
            navMan.NavigateTo("");
        }
        
        newHotel.Region = regioner[0];
    }

    private async Task HandleNewHotel()
    {
        
        try
        {
            await IHotelService.CreateHotel(newHotel);
            navMan.NavigateTo("/");
        }
        catch (Exception e)
        {
            if (e.Message.Contains("Dette hotelnavn er ikke unikt"))
            {
                errorText = "Dette hotelnavn er ikke unikt";
            }
            else
            {
                errorText = e.Message;
            }
        }
    }
}