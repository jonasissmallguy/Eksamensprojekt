@using Core
@using Core.DTO.Goal
@using Client.Components

@inject NavigationManager navMan;
@inject IBruger IBrugerService;
@inject IHotel IHotelService;
@inject ISkole ISkoleService;
@inject IGoal IGoalService;
@inject IUddannelse IUddannelseService;


@page "/dashboard"
<h3>Dashboard</h3>

<div class="dashboard-topline">
    
    <!-- Div med en søgebar, dropdown menuer og knap til eksport af lister -->
    <div class="searchbar">
        <TextInput @bind-value="@searchText" Placeholder="Søg ved navn..."></TextInput>
    </div>

    <!-- Dropdown til hotelvalg -->
    <div class="dropdownmenu">
        <Dropdown Color="DropdownColor.Secondary">
            <DropdownToggleButton>@(selectedHotelId == null ? "Hotel" :
                GetHotelName(selectedHotelId))</DropdownToggleButton>
            <DropdownMenu>
                <DropdownItem @onclick="() => SelectHotel(null)">Alle hoteller</DropdownItem>
                @foreach (var y in alleHoteller)
                {
                    <DropdownItem @onclick="() => SelectHotel(y.HotelId)">@y.HotelName</DropdownItem>
                }
            </DropdownMenu>
        </Dropdown>
    </div>

    <!-- Dropdown til rolle -->
    <div class="dropdownmenu">
        <Dropdown Color="DropdownColor.Secondary">
            <DropdownToggleButton>@(string.IsNullOrEmpty(selectedYear) ? "År" : selectedYear)</DropdownToggleButton>
            <DropdownMenu>
                <DropdownItem @onclick="() => SelectYear(String.Empty)">Alle år</DropdownItem>
                <DropdownItem @onclick="@(() => SelectYear("År 1"))">År 1</DropdownItem>
                <DropdownItem @onclick="@(() => SelectYear("År 2"))">År 2</DropdownItem>
                <DropdownItem @onclick="@(() => SelectYear("År 3"))">År 3</DropdownItem>
            </DropdownMenu>
        </Dropdown>
    </div>

    <!-- Dropdown til skolevalg -->
    <div class="dropdownmenu">
        <Dropdown Color="DropdownColor.Secondary">
            <DropdownToggleButton>@(selectedSkoleId == null ? "Skole" :
                                      GetSkoleName(selectedSkoleId))</DropdownToggleButton>
            <DropdownMenu>
                <DropdownItem @onclick="() => SelectSkole(null)">Alle skoler</DropdownItem>
                @foreach (var sk in alleSkoler)
                {
                    <DropdownItem @onclick="() => SelectSkole(sk.SkoleId)">@sk.SkoleNavn</DropdownItem>
                }
            </DropdownMenu>
        </Dropdown>
    </div>

    <!-- Dropdown til uddannelsesvalg -->
    <div class="dropdownmenu">
        <Dropdown Color="DropdownColor.Secondary">
            <DropdownToggleButton>@(selectedUddannelseId == null ? "Uddannelse" :
                GetUddanelseName(selectedUddannelseId))</DropdownToggleButton>
            <DropdownMenu>
                <DropdownItem @onclick="() => SelectUddannelse(null)">Alle uddannelser</DropdownItem>
                @foreach (var u in alleUddannelser)
                {
                    <DropdownItem @onclick="() => SelectUddannelse(u.UddannelseId)">@u.UddannelseNavn</DropdownItem>
                }
            </DropdownMenu>
        </Dropdown>
    </div>
    
    @if (selectedStudentIds.Any())
    {
        <!-- Knap til at tilføje et delmål-->
        <div class="addgoal-button">
            <Button class="btn btn-primary" @onclick="OpenModal">Tilføj delmål</Button>
        </div>
        <!-- Knap til eksport af elevoversigt. Fordi det er i en div skal hele diven have en class for at rykke til højre -->
        <div class="export-button">
            <Button class="btn btn-primary">Eksporter fil</Button>
        </div>
    }
    
</div>

<!-- Tabel som laver en ny række for hver elev som indeholder navn, rolle og hotel. -->
<table>
    <tr>
        <th>
            <input type="checkbox"
                   @onchange="ToggleSelectAll"
                   checked="@AreAllFilteredSelected" />
        </th>
        <th>Navn</th>
        <th>Hotel</th>
        <th>Status</th>
        <th>År</th>
        <th>Skole</th>
        <th>Uddannelse</th>
    </tr>
    
    @if (alleElever != null)
    {
        @foreach (var x in FiltreredElever)
        {
            <tr>
                <td>
                    <input type="checkbox"
                           checked="@selectedStudentIds.Contains(x.Id)"
                           @onchange="(e) => CheckboxValueChanged(x.Id, (bool) ((ChangeEventArgs)e).Value)"/>
                </td>
                <td @onclick="@(() => NavigateToElevPlan(x.Id))">@x.Name</td>
                <td @onclick="@(() => NavigateToElevPlan(x.Id))">@(GetHotelName(x.HotelId))</td>
                <td @onclick="@(() => NavigateToElevPlan(x.Id))">11/47</td>
                <td @onclick="@(() => NavigateToElevPlan(x.Id))">@x.Year</td>
                <td @onclick="@(() => NavigateToElevPlan(x.Id))">@(GetSkoleName(x.SkoleId))</td>
                <td @onclick="@(() => NavigateToElevPlan(x.Id))">@(GetUddanelseName(x.UddannelseId))</td>

            </tr>
        }
    }
    else
    {
        <p>Kan ikke hente elever...</p>
    }
</table>

<ModalTilføjDelmål @ref="modalRef" Title="Tilføj delmål">
    <div class="addGoal-topline">
        <h3>Tilføj delmål</h3>

        <Dropdown Color="DropdownColor.Secondary">
            <DropdownToggleButton>Måltype:</DropdownToggleButton>
            <DropdownMenu>
                @foreach (var y in alleTyper)
                {
                    <DropdownItem @onclick="() => SelectType(y.GoalId)">@y.GoalName</DropdownItem>
                }
            </DropdownMenu>
        </Dropdown>
    </div>

    <EditForm Model="newGoal" class="row p-3">
        <DataAnnotationsValidator/>
        <ValidationSummary/>
        <div class="row justify-content-center">
            <div class="col-md-6 mb-3">
                <label for="Type">Type: @(GetGoalName(selectedGoalId))</label>
            </div>
        </div>
        <!-- Herunder har vi et if statement der forbinder den valgte måltype med en bestemt editfor. -->
        <!-- 1 er kursus, 2 er skole, 3 er delmål -->

        @if (selectedGoalId == 1)
        {
            <div class="row justify-content-center">
                <div class="col-md-6 mb-3">
                    <label for="Titel">Titel:</label>
                    <InputText id="Titel" @bind-Value="newGoal.Title"
                               placeholder="Kursusnavn..." class="form-control"/>
                </div>
            </div>
            <div class="row justify-content-center">
                <div class="col-md-6 mb-3">
                    <label for="Beskrivelse">Beskrivelse:</label>
                    <InputTextArea id="Beskrivelse" @bind-Value="newGoal.Description"
                                   placeholder="Husk at tilføje adresse!" class="form-control"/>
                </div>
            </div>
            <div class="row justify-content-center">
                <div class="col-md-6 mb-3">
                    <label for="Status">Status:</label>
                    <InputText id="Status" @bind-Value="newGoal.Status"
                               placeholder="Status" class="form-control"/>
                </div>
            </div>
            <div class="row justify-content-center">
                <div class="col-md-6 mb-3">
                    <label for="Semester">Semester:</label>
                    <InputSelect class="form-select" @bind-Value="newGoal.Semester">
                        @foreach (var yy in år)
                        {
                            <option value="@yy">@yy</option>
                        }
                    </InputSelect>
                </div>
            </div>
            <div class="row justify-content-center">
                <div class="col-md-6 mb-3">
                    <button class="btn btn-primary">Tilføj</button>
                </div>
            </div>
        }
        else if (selectedGoalId == 2)
        {
            <div class="row justify-content-center">
                <div class="col-md-6 mb-3">
                    <label for="Titel">Titel:</label>
                    <InputText id="Titel" @bind-Value="newGoal.Title"
                               placeholder="Titel på delmål..." class="form-control"/>
                </div>
            </div>
            <div class="row justify-content-center">
                <div class="col-md-6 mb-3">
                    <label for="Beskrivelse">Beskrivelse:</label>
                    <InputTextArea id="Beskrivelse" @bind-Value="newGoal.Description"
                                   placeholder="Beskrivelse" class="form-control"/>
                </div>
            </div>
            <div class="row justify-content-center">
                <div class="col-md-6 mb-3">
                    <label for="Status">Status:</label>
                    <InputText id="Status" @bind-Value="newGoal.Status"
                               placeholder="Status" class="form-control"/>
                </div>
            </div>
            <div class="row justify-content-center">
                <div class="col-md-6 mb-3">
                    <label for="Semester">Semester:</label>
                    <InputSelect class="form-select" @bind-Value="newGoal.Semester">
                        @foreach (var yy in år)
                        {
                            <option value="@yy">@yy</option>
                        }
                    </InputSelect>
                </div>
            </div>
            <div class="row justify-content-center">
                <div class="col-md-6 mb-3">
                    <button class="btn btn-primary">Tilføj</button>
                </div>
            </div>
        }
        else if (selectedGoalId == 3)
        {
            <div class="row justify-content-center">
                <div class="col-md-6 mb-3">
                    <label for="Titel">Titel:</label>
                    <InputText id="Titel" @bind-Value="newGoal.Title"
                               placeholder="Titel på delmål..." class="form-control"/>
                </div>
            </div>
            <div class="row justify-content-center">
                <div class="col-md-6 mb-3">
                    <label for="Beskrivelse">Beskrivelse:</label>
                    <InputTextArea id="Beskrivelse" @bind-Value="newGoal.Description"
                                   placeholder="Beskrivelse" class="form-control"/>
                </div>
            </div>
            <div class="row justify-content-center">
                <div class="col-md-6 mb-3">
                    <label for="Status">Status:</label>
                    <InputText id="Status" @bind-Value="newGoal.Status"
                               placeholder="Status" class="form-control"/>
                </div>
            </div>
            <div class="row justify-content-center">
                <div class="col-md-6 mb-3">
                    <label for="Semester">Semester:</label>
                    <InputSelect class="form-select" @bind-Value="newGoal.Semester">
                        @foreach (var yy in år)
                        {
                            <option value="@yy">@yy</option>
                        }
                    </InputSelect>
                </div>
            </div>
            <div class="row justify-content-center">
                <div class="col-md-6 mb-3">
                    <button class="btn btn-primary">Tilføj</button>
                </div>
            </div>
        }
        else
        {
            <p>Vælg en måltype for at få den passende skabelon.</p>
        }

    </EditForm>

</ModalTilføjDelmål>

@code {

    // En variabel som gemmer det der bliver tastet ind i søgebaren
    private string searchText = string.Empty;

    private string selectedYear = String.Empty;
    private int? selectedHotelId = null;
    private bool isSelected(int id) => selectedStudentId == id;
    private int? selectedStudentId = null;
    private bool AreAllFilteredSelected => FiltreredElever.Any() && FiltreredElever.All(e => selectedStudentIds.Contains(e.Id));
    private int? selectedSkoleId = null;
    private int? selectedUddannelseId = null;


    private bool isChecked;

    private List<ElevOversigtDTO> alleElever;
    private List<HotelNameDTO> alleHoteller;
    private HashSet<int> selectedStudentIds = new();
    private List<SkoleDTO> alleSkoler;
    private List<UddannelseDTO> alleUddannelser;

    // Filter til søgetekst og til valg af hotel
    private IEnumerable<ElevOversigtDTO> FiltreredElever =>
        alleElever.Where((a =>
            (string.IsNullOrWhiteSpace(searchText) ||
             a.Name.Contains(searchText, StringComparison.OrdinalIgnoreCase)) &&
            (!selectedHotelId.HasValue || a.HotelId == selectedHotelId) &&
            (string.IsNullOrEmpty(selectedYear) || a.Year == selectedYear) &&
            (!selectedSkoleId.HasValue || a.SkoleId == selectedSkoleId) &&
            (!selectedUddannelseId.HasValue || a.UddannelseId == selectedUddannelseId)));

    protected override async Task OnInitializedAsync()
    {
        alleElever = await IBrugerService.GetElevOversigt();

        alleHoteller = await IHotelService.GetAllHotelNames();

        alleSkoler = await ISkoleService.GetAllSkoleNames();
        
        alleTyper = await IGoalService.GetAllGoalTypes();

        alleUddannelser = await IUddannelseService.GetAllUddannelseNames();
    }

    private async Task NavigateToElevPlan(int studentId)
    {
        navMan.NavigateTo($"minelevplan/{studentId}");
    }

    private string GetHotelName(int? hotelId)
    {
        var hotel = alleHoteller.FirstOrDefault(h => h.HotelId == hotelId);
        return hotel?.HotelName ?? "Ukendt Hotel";
    }

    private void SelectHotel(int? hotelId)
    {
        selectedHotelId = hotelId;
    }

    private string GetSkoleName(int? skoleId)
    {
        var skole = alleSkoler.FirstOrDefault(sk => sk.SkoleId == skoleId);
        return skole?.SkoleNavn ?? "Ukendt skole";
    }

    private void SelectSkole(int? skoleId)
    {
        selectedSkoleId = skoleId;
    }
    
    private string GetUddanelseName(int? uddannelseId)
    {
        var uddannelse = alleUddannelser.FirstOrDefault(u => u.UddannelseId == uddannelseId);
        return uddannelse?.UddannelseNavn ?? "Ukendt uddanelse";
    }

    private void SelectUddannelse(int? uddannelseId)
    {
        selectedUddannelseId = uddannelseId;
    }

    private void NavigateToAddGoal()
    {
        navMan.NavigateTo("/tilføjdelmål");
    }

    private void SelectYear(string year)
    {
        selectedYear = year;
    }

    private void CheckboxValueChanged(int studentId, bool value)
    {
        if (value)
        {
            selectedStudentIds.Add(studentId);
        }
        else
        {
            selectedStudentIds.Remove(studentId);
        }
    }

    private void ToggleSelectAll(ChangeEventArgs e)
    {
        bool shouldSelectAll = (bool)e.Value;
        
        if (shouldSelectAll)
        {
            foreach (var elev in FiltreredElever)
            {
                selectedStudentIds.Add(elev.Id);
            }
        }
        else
        {
            foreach (var elev in FiltreredElever)
            {
                selectedStudentIds.Remove(elev.Id);
            }
        }
    }
    
    //Herunder koden til tilføj delmål
    private GoalCreationDTO newGoal = new();

    private List<GoalNameDTO> alleTyper;

    private int? selectedGoalId = null;

    private string[] år = { "År 1", "År 2", "År 3" };

    private string GetGoalName(int? goalId)
    {
        var goal = alleTyper.FirstOrDefault(t => t.GoalId == goalId);
        return goal?.GoalName ?? "Ukendt";
    }

    private void SelectType(int? goalId)
    {
        selectedGoalId = goalId;
    }
    
    // Herunder kode til Modaldialog

    private ModalTilføjDelmål? modalRef;
    
    private void OpenModal()
    {
        modalRef?.Open();
    }
    
}