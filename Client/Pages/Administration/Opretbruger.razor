@page "/opretbruger"

@inject NavigationManager navMan;
@inject IHotel IHotelService;
@inject IBruger IBrugerService;

@using Core


<div class="form-page-container">
    <div class="form-wrapper">
        <div class="form-card">
            <div class="form-header">
                <h1 class="form-title">Opret ny bruger</h1>
                <p class="form-description">Udfyld nedenstående felter for at oprette en ny bruger i systemet.</p>
            </div>
            <EditForm Model="newUser" OnValidSubmit="@HandleNewUser">
                <DataAnnotationsValidator />
                <ValidationSummary />
                <scan style="color: red">@errorText</scan>
                <div class="form-group">
                    <label class="form-label required-field">Fornavn</label>
                    <InputText class="form-control" @bind-Value="newUser.FirstName" placeholder="Indtast fornavn" />
                </div>

                <div class="form-group">
                    <label class="form-label required-field">Efternavn</label>
                    <InputText class="form-control" @bind-Value="newUser.LastName" placeholder="Indtast efternavn" />
                </div>

                <div class="form-group">
                    <label class="form-label required-field">Email</label>
                    <InputText class="form-control" @bind-Value="newUser.Email" placeholder="Indtast email" />
                </div>

                <div class="form-group">
                    <label class="form-label required-field">Mobil</label>
                    <InputNumber class="form-control" @bind-Value="newUser.Mobile" placeholder="Indtast mobilnummer" />
                </div>
                <div class="form-group">
                    <label class="form-label required-field">Køn</label>
                    <InputSelect class="form-select" @bind-Value="newUser.Køn">
                        @foreach (var g in køn)
                        {
                            <option value="@g">@g</option>
                        }
                    </InputSelect>
                </div>
                <div class="form-group">
                    <label class="form-label required-field">Rolle</label>
                    <InputSelect class="form-select" @bind-Value="newUser.Rolle">
                        @foreach (var rolle in roller)
                        {
                            <option value="@rolle">@rolle</option>
                        }
                    </InputSelect>
                </div>
                <div class="form-group">
                    <label class="form-label required-field">Start Dato</label>
                    <InputDate class="form-control" @bind-Value="newUser.StartDate" placeholder="Indtast ansættelsedato" />
                </div>
                <div class="form-group">
                    <label class="form-label required-field">Afslutnings Dato</label>
                    <InputDate class="form-control" @bind-Value="newUser.EndDate" placeholder="Indtast afslutningsdatoedato" />
                </div>
                <div class="form-group">
                    <label class="form-label required-field">Hotel</label>
                    <InputSelect class="form-select" @bind-Value="newUser.HotelId">
                        @foreach (var x in hoteller)
                        {
                            <option value="@x.HotelId">@x.HotelName</option>
                        }
                    </InputSelect>
                </div>
                <div class="form-group">
                    <label class="form-label required-field">Årgang</label>
                    <InputSelect class="form-select" @bind-Value="newUser.Year">
                        @foreach (var x in år)
                        {
                            <option value="@x">@x</option>
                        }
                    </InputSelect>
                </div>
                <div class="form-group">
                    <label class="form-label required-field">Skole</label>
                    <InputSelect class="form-select" @bind-Value="newUser.Skole">
                        @foreach (var s in skole)
                        {
                            <option value="@s">@s</option>
                        }
                    </InputSelect>
                </div>
                <div class="form-group">
                    <label class="form-label required-field">Uddannelse</label>
                    <InputSelect class="form-select" @bind-Value="newUser.Uddannelse">
                        @foreach (var u in uddannelse)
                        {
                            <option value="@u">@u</option>
                        }
                    </InputSelect>
                </div>
                <button type="submit" class="submit-btn">Opret bruger</button>
            </EditForm>
        </div>
    </div>

    <div class="image-wrapper">
        <img src="icons/chef-create.jpg"  class="form-image" />
    </div>
</div>

@code {
    private BrugerCreateDTO newUser = new();
    private List<HotelNameDTO> hoteller = new();
    private string[] roller = { "Elev", "Køkkenchef", "Funktionær", "HR" };
    private string[] køn = { "Mand", "Kvinde", "Ikke anviget" };
    private string[] regioner = { "Jylland", "Fyn", "Sjælland" };
    private string[] år = { "År 1", "År 2", "År 3" };
    private string[] skole = { "Kold Kollege", "Bæskolen Kronjylland", "Hansted Kokkeskole" };
    private string[] uddannelse = { "EUX", "Voksenelev"};
    private string errorText;

// rasmus skiftet "void" til "Task"
    protected override async Task OnInitializedAsync()
    {
        newUser.Rolle = roller[0];
        newUser.Køn = køn[2]; //prefixed til "Ikke angivet"
        newUser.Year = år[0];
        newUser.Uddannelse = uddannelse[0];
        newUser.Skole = skole[0];

        try
        {
            hoteller = await IHotelService.GetAllHotelNames();
            newUser.HotelId = hoteller.Select(x => x.HotelId).FirstOrDefault();
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Fejl ved hentning af hoteller: {ex.Message}");
        }
    }

    private async Task HandleNewUser()
    {
        try
        {
            var user = await IBrugerService.OpretBruger(newUser);
            navMan.NavigateTo($"opretelevplan/{user.Id}");

        }
        catch (Exception e)
        {
            //Er der allerede en bruger på de informationer, kommer der fejltekst
            if (e.Message.Contains("Du har en bruger"))
            {
                errorText = "Du har en bruger venligst gå til login";
            }
            else
            {
                errorText = "Ukendt fejl";
            }
        }


        if (newUser.Rolle.Equals("Elev"))
        {
            navMan.NavigateTo($"/opretelevplan/{newUser.Id}");
        }
        else
        {
            navMan.NavigateTo("");
        }
        
    }
}