@using Core
@inject IAuth AuthService;
@inject NavigationManager navMan;
@inherits LayoutComponentBase



<div class="nav-container">
    <span class="logo-icon">
        <img @onclick="GoToHome" style="cursor: pointer" src="icons/logo.svg"/>
    </span>

    <nav class="nav-menu">
        <NavLink href="" Match="NavLinkMatch.All" ActiveClass="active">
            <div class="nav-item">
                <img class="icons" src="icons/user.svg"/>
            </div>
        </NavLink>
        <NavLink href="dashboard" ActiveClass="active">
            <div class="nav-item">
                <img class="icons" src="icons/view.svg"/>
            </div>
        </NavLink>
        @if (_currentUser.Rolle != null && _currentUser.Rolle == "HR")
        { 
            <NavLink href="opretbruger" ActiveClass="active">
                <div class="nav-item">
                    <img class="icons" src="icons/person-plus.svg"/>
                </div>
            </NavLink>
            <NavLink href="hotels" ActiveClass="active">
                <div class="nav-item">
                    <img class="icons" src="icons/building-add.svg"/>
                </div>
            </NavLink>   
        }
        @if (_currentUser.Rolle == "Elev")
        {
            <NavLink href="@($"minelevplan/{_currentUser.Id}")" ActiveClass="active">
                <div class="nav-item">
                    <img class="icons" src="icons/person-plus.svg"/>
                </div>
            </NavLink>
        }
    </nav>

    <div class="nav-footer">
        <div class="nav-item">
            <img @onclick="() => LogOut()" class="logout-icon" src="icons/sign-out.svg"/>
        </div>
    </div>
</div>

@code {

    [CascadingParameter] 
    private BrugerLoginDTO _currentUser { get; set; }
    
    private void GoToHome()
    {
        navMan.NavigateTo("");
    }
    
    private async Task LogOut()
    {
        await AuthService.Logout();
        navMan.NavigateTo("/login", forceLoad: true);
    }

}
