@using Core;

<div class="modal @modalClass" tabindex="-1" role="dialog" style="display:@modalDisplay; overflow-y: auto;">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">@Title</h5>
                <button type="button" class="btn-close" data-dismiss="modal" aria-label="Close" @onclick="Close">
                </button>
            </div>
            <div class="modal-body">
                @ChildContent
            </div>
        </div>
    </div>
</div>

@if (showBackdrop)
{
    <div class="modal-backdrop fade show"></div>
}

@code {
    
    [Parameter]
    public string? Title { get; set; } = "Tilføj delmål";

    [Parameter]
    public RenderFragment? ChildContent { get; set; }
    
    [Parameter]
    public EventCallback<Hotel> OnHotelChange { get; set; }
    public async Task SelectHotel(Hotel hotel)
    {
        await OnHotelChange.InvokeAsync(hotel);
        Close();
    }
    
    [Parameter]
    public EventCallback<string> OnRolleSelected { get; set; }
    public async Task SelectRolle(string rolle)
    {
        await OnRolleSelected.InvokeAsync(rolle);
        Close();
    }

    private string modalDisplay = "none;";
    private string modalClass = string.Empty;
    private bool showBackdrop = false;


    public void Open()
    {
        modalDisplay = "block";
        modalClass = "show";
        showBackdrop = true;
        StateHasChanged();
    }

    public void Close()
    {
        modalDisplay = "none";
        modalClass = string.Empty;
        showBackdrop = false;
        StateHasChanged();
    }
}